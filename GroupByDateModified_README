# File Sorting and Moving Script (GroupByDateModified.ipynb)

This script helps you sort and organize files in a source directory by moving them into subdirectories based on their modification dates. Files are grouped into folders named after the corresponding year and month of their last modification.

## Prerequisites
- Python 3.x installed on your system
- Required Python packages: `os`, `shutil`, `tkinter`

## Usage
1. Launch Jupyter Notebook.
2. Navigate to the directory where you saved the `GroupByDateModified.ipynb` file.
3. Open the notebook file.
4. Follow the instructions within the notebook to run the script.
5. The script will prompt you to select a source directory using a file dialog.
6. After selecting the directory, the script will group the files based on their modification dates and create subdirectories named after the corresponding year and month.
7. Each file will be moved to its respective subdirectory based on its modification date.
8. Once the process is complete, the files will be organized into the created subdirectories based on their modification dates.

## Note
- The script uses the Tkinter library to provide a file dialog for selecting the source directory.
- The files in the source directory are grouped based on their modification dates.
- Subdirectories are created for each year and month combination.
- Each file is moved to its corresponding subdirectory based on its modification date.
- The script preserves the original directory structure while organizing the files.
- This script is useful for sorting and organizing files based on their modification dates, providing a more structured and manageable file system.
